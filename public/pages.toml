title = "Modern Documentation"

[[pages]]
id = 1
title = "Introduction"
content = "# Introduction\n\nWelcome to our documentation. This is the first page of our guide.\n\n## Key Features\n\n- Easy to navigate\n- Beautiful design\n- Responsive layout\n- TOML-based content management\n\n### Code Example\n\n```javascript\nfunction hello() {\n  console.log('Hello, world!');\n}\n```\n\n## Tables\n\n| Feature | Description |\n|---------|-------------|\n| Markdown | Full support |\n| Code | Syntax highlighting |\n| Tables | Responsive design |\n\n> This is a blockquote that demonstrates our styling capabilities.\n\nYou can also use **bold** and *italic* text, or even ~~strikethrough~~.\n\n1. Ordered lists\n2. Are supported\n3. With proper spacing\n\nAnd [links](https://example.com) are styled nicely too!\n"

[[pages]]
id = 2
title = "Getting Started"
content = "# Getting Started\n\nLet's begin with the basics of our platform.\n\n## Quick Start\n\n1. Install dependencies\n2. Configure settings\n3. Start building\n\n### Installation\n\n```bash\nnpm install @example/package\n```\n\n## Code Examples\n\n```typescript\ninterface Config {\n  apiKey: string;\n  endpoint: string;\n}\n\nclass Client {\n  constructor(config: Config) {\n    // Implementation\n  }\n}\n```\n\n## Next Steps\n\nLearn about our core concepts and best practices.\n\n> **Pro tip:** Make sure to read the documentation thoroughly!\n"

[[pages]]
id = 3
title = "Advanced Topics"
content = "# Advanced Topics\n\nExploring more complex features and capabilities.\n\n## Advanced Features\n\n- Custom integrations\n- Performance optimization\n- Security best practices\n- Deployment strategies\n\n### Performance Tips\n\n```typescript\n// Bad\nfunction slowFunction() {\n  return Array(1000000).fill(0).map(x => x + 1)\n}\n\n// Good\nfunction fastFunction() {\n  return new Array(1000000).fill(0).map(x => x + 1)\n}\n```\n\n## Security Considerations\n\n| Threat | Mitigation |\n|--------|------------|\n| XSS | Input sanitization |\n| CSRF | Token validation |\n| SQL Injection | Prepared statements |\n\n> **Warning:** Always follow security best practices!\n\n### Additional Resources\n\n1. [Security Guidelines](https://example.com/security)\n2. [Best Practices](https://example.com/best-practices)\n3. [API Documentation](https://example.com/api)\n"

[[pages]]
id = 4
title = "test"
content = "# h1 Heading 8-) ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading   ## Horizontal Rules  ___  ---  ***   ## Typographic replacements  Enable typographer option to see result.  (c) (C) (r) (R) (tm) (TM) (p) (P) +-  test.. test... test..... test?..... test!....  !!!!!! ???? ,,  -- ---  \"Smartypants, double quotes\" and 'single quotes'   ## Emphasis  **This is bold text**  __This is bold text__  *This is italic text*  _This is italic text_  ~~Strikethrough~~   ## Blockquotes   > Blockquotes can also be nested... >> ...by using additional greater-than signs right next to each other... > > > ...or with spaces between arrows.   ## Lists  Unordered  + Create a list by starting a line with `+`, `-`, or `*` + Sub-lists are made by indenting 2 spaces:   - Marker character change forces new list start:     * Ac tristique libero volutpat at     + Facilisis in pretium nisl aliquet     - Nulla volutpat aliquam velit + Very easy!  Ordered  1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa   1. You can use sequential numbers... 1. ...or keep all the numbers as `1.`  Start numbering with offset:  57. foo 1. bar   ## Code  Inline `code`  Indented code      // Some comments     line 1 of code     line 2 of code     line 3 of code   Block code \"fences\"  ``` Sample text here... ```  Syntax highlighting  ``` js var foo = function (bar) {   return bar++; };  console.log(foo(5)); ```  ## Tables  | Option | Description | | ------ | ----------- | | data   | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext    | extension to be used for dest files. |  Right aligned columns  | Option | Description | | ------:| -----------:| | data   | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext    | extension to be used for dest files. |   ## Links  [link text](http://dev.nodeca.com)  [link with title](http://nodeca.github.io/pica/demo/ \"title text!\")  Autoconverted link https://github.com/nodeca/pica (enable linkify to see)   ## Images  ![Minion](https://octodex.github.com/images/minion.png) ![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")  Like links, Images also have a footnote style syntax  ![Alt text][id]  With a reference later in the document defining the URL location:  [id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"   ## Plugins  The killer feature of `markdown-it` is very effective support of [syntax plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin).   ### [Emojies](https://github.com/markdown-it/markdown-it-emoji)  > Classic markup: :wink: :cry: :laughing: :yum: > > Shortcuts (emoticons): :-) :-( 8-) ;)  see [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.   ### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)  - 19^th^ - H~2~O   ### [\\<ins>](https://github.com/markdown-it/markdown-it-ins)  ++Inserted text++   ### [\\<mark>](https://github.com/markdown-it/markdown-it-mark)  ==Marked text==   ### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)  Footnote 1 link[^first].  Footnote 2 link[^second].  Inline footnote^[Text of inline footnote] definition.  Duplicated footnote reference[^second].  [^first]: Footnote **can have markup**      and multiple paragraphs.  [^second]: Footnote text.   ### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)  Term 1  :   Definition 1 with lazy continuation.  Term 2 with *inline markup*  :   Definition 2          { some code, part of Definition 2 }      Third paragraph of definition 2.  _Compact style:_  Term 1   ~ Definition 1  Term 2   ~ Definition 2a   ~ Definition 2b   ### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)  This is HTML abbreviation example.  It converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.  *[HTML]: Hyper Text Markup Language  ### [Custom containers](https://github.com/markdown-it/markdown-it-container)  ::: warning *here be dragons* :::"